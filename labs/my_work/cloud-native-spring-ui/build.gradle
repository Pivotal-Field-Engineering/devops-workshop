buildscript {
    ext {
        springBootVersion = '1.5.7.RELEASE'
        springDependencyManagementVersion = '1.0.3.RELEASE'
    }
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath("gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.17")
        classpath("io.spring.gradle:dependency-management-plugin:${springDependencyManagementVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.gorylenko.gradle-git-properties'
apply plugin: 'io.spring.dependency-management'

gitProperties {
	dateFormat = "yyyy-MM-dd'T'HH:mmZ"
    dateFormatTimeZone = "UTC"
    gitRepositoryRoot = new File("${project.rootDir}/../../..")
}

import org.apache.tools.ant.filters.*

processResources {
    filter ReplaceTokens, tokens: [
		"application.name": project.property("application.name"),
		"application.description": project.property("application.description"),
        "application.version": project.property("version")
    ]
}

dependencyManagement {
    imports {
		mavenBom "com.vaadin:vaadin-bom:8.1.5"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Dalston.SR3"
        mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:1.5.0.RELEASE"
    }
}

dependencies {
	compileOnly('org.projectlombok:lombok:1.16.18')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.cloud:spring-cloud-starter-feign')
	compile('org.springframework.cloud:spring-cloud-starter-ribbon')
	compile('com.vaadin:vaadin-spring-boot-starter')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

repositories {
    maven {
        url "https://repo.spring.io/plugins-release"
    }
	mavenCentral()
    mavenLocal()
}

jar {
    excludes = ['**/application.yml']
}

task execJar (type: Jar, dependsOn: jar) {
    classifier = 'exec'
    from sourceSets.main.output
}

bootRepackage  {
    withJarTask = tasks['execJar']
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'io.pivotal'
            from components.java
        }
    }
	repositories {
        mavenLocal()
    }
}